Description: Correct writeInt2mmAssert() to work with int64_t
 The writeInt2mmAssert() method in tests/utils/StringTest.cpp uses
 the wrong printf formatting string when printing int64_t.
Author: Petter Reinholdtsen <pere@hungry.com>
Forwarded: no
Reviewed-By: Petter Reinholdtsen <pere@hungry.com>
Last-Update: 2017-10-07

Index: cura-engine/tests/utils/StringTest.cpp
===================================================================
--- cura-engine.orig/tests/utils/StringTest.cpp	2017-10-03 04:17:45.270801535 +0000
+++ cura-engine/tests/utils/StringTest.cpp	2017-10-07 04:41:34.768035539 +0000
@@ -87,13 +87,13 @@
     if (!ss.good())
     {
         char buffer[200];
-        sprintf(buffer, "The integer %ld was printed as '%s' which was a bad string!", in, str.c_str());
+        sprintf(buffer, "The integer %" PRId64 " was printed as '%s' which was a bad string!", in, str.c_str());
         CPPUNIT_ASSERT_MESSAGE(std::string(buffer), false);
     }
     int64_t out = MM2INT(strtod(str.c_str(), nullptr));
 
     char buffer[200];
-    sprintf(buffer, "The integer %ld was printed as '%s' which was interpreted as %ld rather than %ld!", in, str.c_str(), out, in);
+    sprintf(buffer, "The integer %" PRId64 " was printed as '%s' which was interpreted as %" PRId64 " rather than %" PRId64 "!", in, str.c_str(), out, in);
     CPPUNIT_ASSERT_MESSAGE(std::string(buffer), in == out);
 }
 
