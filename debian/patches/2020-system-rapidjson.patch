Author: Gregor Riepl <onitake@gmail.com>
Description: Depend on system rapidjson and polyclipping.
  Upstream bundled their own versions of librapidjson and
  libclipper/polyclipping. On Debian, we have maintained
  packages of these libraries, so use those instead.
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -55,9 +55,14 @@
     endif()
 endif()
 
-include_directories(${CMAKE_CURRENT_BINARY_DIR} libs)
+include_directories(${CMAKE_CURRENT_BINARY_DIR})
 
-add_library(clipper STATIC libs/clipper/clipper.cpp)
+find_package(PkgConfig)
+pkg_check_modules(POLYCLIPPING REQUIRED polyclipping)
+include_directories(${POLYCLIPPING_INCLUDE_DIR} SYSTEM)
+
+find_path(RAPIDJSON_INCLUDE_DIR "rapidjson/rapidjson.h" REQUIRED)
+include_directories(${RAPIDJSON_INCLUDE_DIR} SYSTEM)
 
 set(engine_SRCS # Except main.cpp.
     src/bridge.cpp
@@ -154,7 +159,7 @@
 
 # Compiling CuraEngine itself.
 add_library(_CuraEngine ${engine_SRCS} ${engine_PB_SRCS}) #First compile all of CuraEngine as library, allowing this to be re-used for tests.
-target_link_libraries(_CuraEngine clipper)
+target_link_libraries(_CuraEngine ${POLYCLIPPING_LIBRARIES})
 if (ENABLE_ARCUS)
     target_link_libraries(_CuraEngine Arcus)
 endif ()
--- a/src/raft.cpp
+++ b/src/raft.cpp
@@ -1,5 +1,5 @@
 /** Copyright (C) 2013 Ultimaker - Released under terms of the AGPLv3 License */
-#include <clipper/clipper.hpp>
+#include <polyclipping/clipper.hpp>
 
 #include "utils/math.h"
 #include "raft.h"
--- a/src/utils/intpoint.h
+++ b/src/utils/intpoint.h
@@ -9,7 +9,7 @@
 #define INLINE static inline
 
 //Include Clipper to get the ClipperLib::IntPoint definition, which we reuse as Point definition.
-#include <clipper/clipper.hpp>
+#include <polyclipping/clipper.hpp>
 
 #include <limits>
 #include <stdint.h>
--- a/src/utils/polygon.h
+++ b/src/utils/polygon.h
@@ -7,7 +7,7 @@
 #include <vector>
 #include <assert.h>
 #include <float.h>
-#include <clipper/clipper.hpp>
+#include <polyclipping/clipper.hpp>
 
 #include <algorithm>    // std::reverse, fill_n array
 #include <cmath> // fabs
